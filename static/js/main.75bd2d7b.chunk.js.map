{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonNavLink/PersonNavLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","NavBar","role","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonNavLink","person","isWomen","sex","slug","name","PersonItem","selectedSlug","mother","father","isSelectedPerson","personMotherName","motherName","personFatherName","fatherName","born","died","PeopleTable","people","length","map","find","personItem","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","loadPeople","loadedPeople","useEffect","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.75bd2d7b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { FC } from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const NavBar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonNavLink: FC<Props> = ({ person }) => {\n  const isWomen = person.sex === 'f';\n\n  return (\n    <NavLink\n      to={`../${person.slug}`}\n      className={() => (\n        classNames({ 'has-text-danger': isWomen })\n      )}\n    >\n      {person.name}\n    </NavLink>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonNavLink } from '../PersonNavLink';\n\ntype Props = {\n  person: Person,\n  selectedSlug: string,\n  mother: Person | undefined,\n  father: Person | undefined,\n};\n\nexport const PersonItem: FC<Props> = ({\n  person,\n  selectedSlug,\n  mother,\n  father,\n}) => {\n  const isSelectedPerson = person.slug === selectedSlug;\n  const personMotherName = person.motherName || '-';\n  const personFatherName = person.fatherName || '-';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': isSelectedPerson })}\n    >\n      <td>\n        <PersonNavLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {mother\n          ? (\n            <PersonNavLink person={mother} />\n          ) : (\n            personMotherName\n          )}\n      </td>\n      <td>\n        {father\n          ? (\n            <PersonNavLink person={father} />\n          ) : (\n            personFatherName\n          )}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem';\n\ntype Props = {\n  people: Person[];\n  selectedSlug: string;\n};\n\nexport const PeopleTable: FC<Props> = ({ people, selectedSlug }) => {\n  const isNoPeopleOnServer = people.length === 0;\n\n  if (isNoPeopleOnServer) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const mother = people\n            .find(personItem => personItem.name === person.motherName);\n          const father = people\n            .find(personItem => personItem.name === person.fatherName);\n\n          return (\n            <PersonItem\n              person={person}\n              key={person.slug}\n              selectedSlug={selectedSlug}\n              mother={mother}\n              father={father}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Person } from '../../types';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { slug = '' } = useParams();\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const loadedPeople = await getPeople();\n\n      setIsLoading(false);\n      setPeople(loadedPeople);\n    } catch {\n      setIsError(true);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"block\">\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"box table-container\">\n        {isLoading\n          ? (<Loader />)\n          : (<PeopleTable people={people} selectedSlug={slug} />)}\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/Navbar';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}